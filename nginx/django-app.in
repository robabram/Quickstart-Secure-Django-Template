# django-app.conf

# the upstream component nginx needs to connect to
upstream django {
    # This is setup for a running uwsgi/gunicorn service running on port 8000.
    # server unix:///path/to/your/mysite/mysite.sock; # for a file socket
    server 127.0.0.1:8000; # for a web port socket (we'll use this first)
}

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}


# configuration of the server
server {
    listen       443 default_server ssl;
    listen       [::]:443 default_server ssl;
    server_name  _;
    root         Quickstart-Secure-Django-Template/django_project;

    add_header X-Frame-Options DENY;
    add_header Strict-Transport-Security max-age=63072000;

    # ssl_certificate     /etc/pki/tls/certs/django_project.crt;
    # ssl_certificate_key /etc/pki/tls/private/django_project.key;
    # ssl_dhparam         /etc/pki/tls/certs/django_project.pem;

    # ssl_session_cache shared:SSL:1m;
    # ssl_session_timeout  10m;
    # ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
    # ssl_prefer_server_ciphers on;

    # max upload size
    client_max_body_size 75M;

    location /static {
        # your Django project's static files - amend as required
        alias /usr/local/Quickstart-Secure-Django-Template/django_project/static-prod;
    }

    # Finally, send all non-static requests to the Django server.
    location / {
        uwsgi_read_timeout 300;
        uwsgi_pass  django;
        include     uwsgi_params;
    }
}